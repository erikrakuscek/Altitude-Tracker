doctype 5
html
  head
    title MQTT ALTITUDE TRACKER
    link(rel="stylesheet", href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css")
    script(src='https://cdn.jsdelivr.net/npm/chart.js@2.9.3/dist/Chart.min.js')
    style.
      body { background: #fafafa; padding: 5px;}
  body
    .container.panel.panel-default
      .col-md-6
        h3 Info
        ul.list-group
          li.list-group-item Connection: 
            if connected
              span.label.label-success Connected
            else
              span.label.label-warning Not connected
          li.list-group-item Host: #{config.hostname}
          li.list-group-item Auth: #{config.auth}
          li.list-group-item Port: #{config.port}
          li.list-group-item Topic: #{config.topic}
      .col-md-6
        canvas#myChart
      .col-md-6
        ul#messages.list-group
    script.
      var lineChart = null;
      window.onload = function() {
        // put chart.js code here
        lineChart = new Chart(document.getElementById('myChart'), {
          type: 'line',
          data: {
            labels: [],
            datasets: [
              {
                label: "Altitude tracking",
                fill: false,
                lineTension: 0.1,
                backgroundColor: "rgba(75,192,192,0.4)",
                borderColor: "rgba(75,192,192,1)",
                borderCapStyle: 'butt',
                borderDash: [],
                borderDashOffset: 0.0,
                borderJoinStyle: 'miter',
                pointBorderColor: "rgba(75,192,192,1)",
                pointBackgroundColor: "#fff",
                pointBorderWidth: 1,
                pointHoverRadius: 5,
                pointHoverBackgroundColor: "rgba(75,192,192,1)",
                pointHoverBorderColor: "rgba(220,220,220,1)",
                pointHoverBorderWidth: 2,
                pointRadius: 5,
                pointHitRadius: 10,
                data: [],
              }
            ]
          },
          options: {
            showLines: true
          }	
        });
      }
      var target = document.getElementById("messages");
      var es = new EventSource('/stream');
      es.onerror = function(e)  { console.error(e); };
      es.onopen = function(e) { console.log("Open", e);};
      es.onmessage = function(e) {
        console.log("Mesage:", e);
        var newElement = document.createElement("li");
        newElement.classList.add("list-group-item");
        newElement.textContent = e.data;
        target.appendChild(newElement);

        const alt = e.data.split(': ')[0]
        const time = e.data.split(': ')[1]
        lineChart.data.labels.push(time);
        lineChart.data.datasets.forEach((dataset) => {
            dataset.data.push(alt);
        });
        lineChart.update();
      };
